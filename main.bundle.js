(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),c=t(667),l=t.n(c),s=new URL(t(497),t.b),A=a()(o());A.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap);"]);var d=l()(s);A.push([e.id,"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n:root {\n  --very-dark-blue: hsl(235, 21%, 11%);\n  --very-dark-desaturated-blue: hsl(235, 24%, 19%);\n  --light-grayish-blue: hsl(234, 39%, 85%);\n  --light-grayish-blue-hover: hsl(236, 33%, 92%);\n  --dark-grayish-blue: hsl(234, 11%, 52%);\n  --very-dark-grayish-blue: hsl(233, 14%, 35%);\n  --very-dark-grayish-blue: hsl(237, 14%, 26%);\n}\n\nhtml {\n  font-size: 10px;\n}\n\nbody {\n  font-family: 'Josefin Sans', sans-serif;\n  font-size: 1.8rem;\n  margin: 0;\n  background-color: var(--light-grayish-blue-hover);\n}\n\nh1 {\n  font-size: 3rem;\n  letter-spacing: 0.5rem;\n  color: #ffffff;\n  font-weight: 700;\n}\n\nmain {\n  max-width: 700px;\n  min-height: 100vh;\n  margin: 0 auto;\n  /* background-color: var(--light-grayish-blue-hover); */\n  position: relative;\n  top: -180px;\n}\n\nmain section,\nmain > div {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\ninput,\n.todo__status,\n.todo__list {\n  border-radius: 0.7rem;\n}\n\n.bg__banner {\n  background-image: url("+d+");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 20rem;\n}\n\nsection {\n  /* background-image: url('../images/bg-mobile-light.jpg');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover; */\n  padding: 2rem 0;\n}\n\nsection input {\n  width: 100%;\n  padding: 1.5rem 4rem;\n  border-style: none;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader img {\n  cursor: pointer;\n}\n\n.todo__status {\n  padding: 1.5rem;\n  text-align: center;\n  margin-top: 2rem;\n  background-color: #ffffff;\n}\n\n.todo__info .todo__status {\n  padding: 0;\n  margin: 0;\n  background-color: none;\n  /* display: none; */\n}\n\n.todo__status a {\n  margin-right: 2rem;\n  text-decoration: none;\n  color: var(--dark-grayish-blue);\n  font-weight: 700;\n}\n\n.todo__list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  /* position: relative;\n  top: -27px; */\n  background-color: #ffffff;\n}\n\nli,\n.todo__info {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 3rem 0.5rem;\n  border-bottom: 0.1rem solid;\n  font-size: 1.4rem;\n  color: var(--dark-grayish-blue);\n}\n\n.todo__info {\n  border: none;\n}\n\nli,\ninput {\n  color: var(--dark-grayish-blue);\n}\n\n.todo__info,\n.todo__info a,\n.info {\n  color: var(--dark-grayish-blue);\n  text-decoration: none;\n}\n\n.info {\n  color: var(--dark-grayish-blue);\n  text-align: center;\n  padding: 1.5rem 0;\n  margin-top: 3rem;\n}\n\nli > div {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\nli span {\n  margin-right: 10px;\n}\n\n.circle {\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid;\n  border-radius: 50%;\n  text-align: center;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.circle:active {\n  border-color: var(--very-dark-grayish-blue);\n}\n\n.completed {\n  background-image: url("+d+");\n  background-position: top right;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border: none;\n}\n\n.close-icon {\n  width: 14px;\n  cursor: pointer;\n}\n\n.todo__complete {\n  text-decoration: line-through;\n  color: var(--light-grayish-blue);\n}\n\na.active {\n  color: #4b7cdf;\n}\n\n.mr-10 {\n  margin-right: 10px;\n}\n\n.attribution {\n  font-size: 11px;\n  text-align: center;\n}\n.attribution a {\n  color: hsl(228, 45%, 44%);\n}\n\n.hide {\n  display: none;\n}\n\n@media screen and (min-width: 800px) {\n  html {\n    font-size: 12px;\n  }\n  input {\n    font-size: 12px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAEA;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,oCAAoC;EACpC,gDAAgD;EAChD,wCAAwC;EACxC,8CAA8C;EAC9C,uCAAuC;EACvC,4CAA4C;EAC5C,4CAA4C;AAC9C;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uCAAuC;EACvC,iBAAiB;EACjB,SAAS;EACT,iDAAiD;AACnD;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;EACd,uDAAuD;EACvD,kBAAkB;EAClB,WAAW;AACb;;AAEA;;EAEE,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;EACE,yDAAsD;EACtD,2BAA2B;EAC3B,4BAA4B;EAC5B,sBAAsB;EACtB,WAAW;EACX,aAAa;AACf;;AAEA;EACE;;;2BAGyB;EACzB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,+BAA+B;EAC/B,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,SAAS;EACT,UAAU;EACV;eACa;EACb,yBAAyB;AAC3B;;AAEA;;EAEE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,2BAA2B;EAC3B,2BAA2B;EAC3B,iBAAiB;EACjB,+BAA+B;AACjC;;AAEA;EACE,YAAY;AACd;;AAEA;;EAEE,+BAA+B;AACjC;;AAEA;;;EAGE,+BAA+B;EAC/B,qBAAqB;AACvB;;AAEA;EACE,+BAA+B;EAC/B,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;EACE,yDAAsD;EACtD,8BAA8B;EAC9B,sBAAsB;EACtB,4BAA4B;EAC5B,YAAY;AACd;;AAEA;EACE,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,6BAA6B;EAC7B,gCAAgC;AAClC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,eAAe;EACjB;EACA;IACE,eAAe;EACjB;AACF",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap');\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n:root {\n  --very-dark-blue: hsl(235, 21%, 11%);\n  --very-dark-desaturated-blue: hsl(235, 24%, 19%);\n  --light-grayish-blue: hsl(234, 39%, 85%);\n  --light-grayish-blue-hover: hsl(236, 33%, 92%);\n  --dark-grayish-blue: hsl(234, 11%, 52%);\n  --very-dark-grayish-blue: hsl(233, 14%, 35%);\n  --very-dark-grayish-blue: hsl(237, 14%, 26%);\n}\n\nhtml {\n  font-size: 10px;\n}\n\nbody {\n  font-family: 'Josefin Sans', sans-serif;\n  font-size: 1.8rem;\n  margin: 0;\n  background-color: var(--light-grayish-blue-hover);\n}\n\nh1 {\n  font-size: 3rem;\n  letter-spacing: 0.5rem;\n  color: #ffffff;\n  font-weight: 700;\n}\n\nmain {\n  max-width: 700px;\n  min-height: 100vh;\n  margin: 0 auto;\n  /* background-color: var(--light-grayish-blue-hover); */\n  position: relative;\n  top: -180px;\n}\n\nmain section,\nmain > div {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\ninput,\n.todo__status,\n.todo__list {\n  border-radius: 0.7rem;\n}\n\n.bg__banner {\n  background-image: url('../images/bg-mobile-light.jpg');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 20rem;\n}\n\nsection {\n  /* background-image: url('../images/bg-mobile-light.jpg');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover; */\n  padding: 2rem 0;\n}\n\nsection input {\n  width: 100%;\n  padding: 1.5rem 4rem;\n  border-style: none;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader img {\n  cursor: pointer;\n}\n\n.todo__status {\n  padding: 1.5rem;\n  text-align: center;\n  margin-top: 2rem;\n  background-color: #ffffff;\n}\n\n.todo__info .todo__status {\n  padding: 0;\n  margin: 0;\n  background-color: none;\n  /* display: none; */\n}\n\n.todo__status a {\n  margin-right: 2rem;\n  text-decoration: none;\n  color: var(--dark-grayish-blue);\n  font-weight: 700;\n}\n\n.todo__list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  /* position: relative;\n  top: -27px; */\n  background-color: #ffffff;\n}\n\nli,\n.todo__info {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 3rem 0.5rem;\n  border-bottom: 0.1rem solid;\n  font-size: 1.4rem;\n  color: var(--dark-grayish-blue);\n}\n\n.todo__info {\n  border: none;\n}\n\nli,\ninput {\n  color: var(--dark-grayish-blue);\n}\n\n.todo__info,\n.todo__info a,\n.info {\n  color: var(--dark-grayish-blue);\n  text-decoration: none;\n}\n\n.info {\n  color: var(--dark-grayish-blue);\n  text-align: center;\n  padding: 1.5rem 0;\n  margin-top: 3rem;\n}\n\nli > div {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\nli span {\n  margin-right: 10px;\n}\n\n.circle {\n  width: 2rem;\n  height: 2rem;\n  border: 1px solid;\n  border-radius: 50%;\n  text-align: center;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.circle:active {\n  border-color: var(--very-dark-grayish-blue);\n}\n\n.completed {\n  background-image: url('../images/bg-mobile-light.jpg');\n  background-position: top right;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border: none;\n}\n\n.close-icon {\n  width: 14px;\n  cursor: pointer;\n}\n\n.todo__complete {\n  text-decoration: line-through;\n  color: var(--light-grayish-blue);\n}\n\na.active {\n  color: #4b7cdf;\n}\n\n.mr-10 {\n  margin-right: 10px;\n}\n\n.attribution {\n  font-size: 11px;\n  text-align: center;\n}\n.attribution a {\n  color: hsl(228, 45%, 44%);\n}\n\n.hide {\n  display: none;\n}\n\n@media screen and (min-width: 800px) {\n  html {\n    font-size: 12px;\n  }\n  input {\n    font-size: 12px;\n  }\n}\n"],sourceRoot:""}]);const u=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(a[l]=!0)}for(var s=0;s<e.length;s++){var A=[].concat(e[s]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var l=e[c],s=r.base?l[0]+r.base:l[0],A=i[s]||0,d="".concat(s," ").concat(A);i[s]=A+1;var u=t(d),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var l=r(e,o),s=0;s<i.length;s++){var A=t(i[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},497:(e,n,t)=>{e.exports=t.p+"645bd127083ef66fbfb9.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),l=t.n(c),s=t(216),A=t.n(s),d=t(589),u=t.n(d),m=t(28),p={};p.styleTagTransform=u(),p.setAttributes=l(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=A(),n()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const f=t.p+"6c03114b495d05f4380b.svg",g=t.p+"910b1f9a23741afc341e.svg",h=function(){return{form:document.querySelector("form"),clearCompletedBtn:document.querySelector(".js-clear-completed"),allToDo:document.querySelector(".all__todo"),activeToDo:document.querySelector(".active__todo"),completedToDo:document.querySelector(".completed__todo"),darkTheme:document.querySelector("#theme__dark"),lightTheme:document.querySelector("#theme__light"),moonImage:document.querySelector("#theme__dark"),sunImage:document.querySelector("#theme__light")}};function y(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const E=function(){var e;(e=document.querySelectorAll("li span"),function(e){if(Array.isArray(e))return y(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return y(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?y(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){e.parentElement.parentElement.classList.remove("hide")}))};var b=JSON.parse(localStorage.getItem("to-do-list"))||[];const v=t.p+"6ee81d30b75cab19d6f7.svg";function C(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const B=function(){var e,n=function(e){if(Array.isArray(e))return C(e)}(e=document.querySelectorAll("li"))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return C(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?C(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=document.querySelectorAll(".completed"),r=document.querySelector(".items__left"),o=n.length-t.length;r.textContent="".concat(o,o>1?" items":" item")},_=t.p+"a8fb15d0278c8e312df5.svg";function k(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}const S=function(){var e;(e=document.querySelectorAll("li span"),function(e){if(Array.isArray(e))return k(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return k(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?k(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){e.getAttribute("data-listener")||(e.addEventListener("click",(function(){if(e.classList.contains("completed")){var n=e.querySelector("img"),t=e.nextElementSibling;e.classList.remove("completed"),e.removeChild(n),t.classList.remove("todo__complete")}else{var r=document.createElement("img"),o=e.nextElementSibling;e.classList.add("completed"),r.setAttribute("src",_),r.setAttribute("alt",""),e.appendChild(r),o.classList.add("todo__complete")}})),e.addEventListener("click",B),e.setAttribute("data-listener",!0))})),B()},x=function e(n,t){var r=document.querySelector("ul"),o=document.createElement("div"),i=document.createElement("li"),a=document.createElement("span"),c=document.createElement("p"),l=document.createElement("img");a.classList.add("circle"),c.textContent=n,document.querySelector("#theme__dark").classList.contains("hide")&&(a.addEventListener("mousedown",(function(){a.style.borderColor="hsl(234, 39%, 85%)"})),a.addEventListener("mouseup",(function(){a.style.borderColor=""}))),o.appendChild(a),o.appendChild(c),l.setAttribute("src",v),l.setAttribute("alt",""),l.classList.add("close-icon"),l.addEventListener("click",(function(){var n=document.querySelector(".todo__list");!function(e,n){b.splice(e,1)}(t),localStorage.setItem("to-do-list",JSON.stringify(b)),n.innerHTML="",b.forEach((function(n,t){return e(n,t)})),B()})),i.appendChild(o),i.appendChild(l),i.setAttribute("draggable",!0),r.appendChild(i),h().allToDo.classList.add("active"),h().activeToDo.classList.remove("active"),h().completedToDo.classList.remove("active"),S(),B(),E()};function w(e){return function(e){if(Array.isArray(e))return q(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return q(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?q(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function q(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}h().moonImage.setAttribute("src",f),h().sunImage.setAttribute("src",g),window.addEventListener("DOMContentLoaded",(function(){if(window.innerWidth>800){var e=document.querySelector(".todo__status");document.querySelector(".js-place-after").after(e)}b.forEach((function(e,n){return x(e,n)}))})),window.addEventListener("resize",(function(){if(window.innerWidth>800){var e=document.querySelector(".todo__status");document.querySelector(".js-place-after").after(e)}else{var n=document.querySelector(".todo__info"),t=document.querySelector(".todo__status");n.parentElement.appendChild(t)}})),h().form.addEventListener("submit",(function(e){e.preventDefault();var n=document.querySelector("input");x(n.value,b.length),b.push(n.value),localStorage.setItem("to-do-list",JSON.stringify(b)),n.value=""})),h().clearCompletedBtn.addEventListener("click",(function(){w(document.querySelectorAll(".completed")).forEach((function(e){document.querySelector(".todo__list").removeChild(e.parentElement.parentElement)}))})),h().activeToDo.addEventListener("click",(function(){h().activeToDo.classList.add("active"),h().allToDo.classList.remove("active"),h().completedToDo.classList.remove("active"),w(document.querySelectorAll("li span")).forEach((function(e){e.classList.contains("completed")?e.parentElement.parentElement.classList.add("hide"):e.parentElement.parentElement.classList.remove("hide")}))})),h().completedToDo.addEventListener("click",(function(){h().completedToDo.classList.add("active"),h().allToDo.classList.remove("active"),h().activeToDo.classList.remove("active"),w(document.querySelectorAll("li span")).forEach((function(e){e.classList.contains("completed")?e.parentElement.parentElement.classList.remove("hide"):e.parentElement.parentElement.classList.add("hide")}))})),h().allToDo.addEventListener("click",(function(){h().allToDo.classList.add("active"),h().activeToDo.classList.remove("active"),h().completedToDo.classList.remove("active"),E()})),h().darkTheme.addEventListener("click",(function(){document.querySelector("#theme__dark").classList.add("hide"),document.querySelector("#theme__light").classList.remove("hide");var e=document.querySelector("body"),n=document.querySelector(".todo__list"),t=document.querySelector(".todo__info"),r=document.querySelector(".todo__info a"),o=document.querySelector(".todo__status"),i=document.querySelector("input");w(document.querySelectorAll(".circle")).forEach((function(e){e.addEventListener("mousedown",(function(e){e.target.style.borderColor="hsl(234, 39%, 85%)"})),e.addEventListener("mouseup",(function(e){e.target.style.borderColor=""}))})),e.style.backgroundColor="hsl(235, 21%, 11%)",n.style.backgroundColor="hsl(235, 24%, 19%)",t.style.backgroundColor="hsl(235, 24%, 19%)",o.style.backgroundColor="hsl(235, 24%, 19%)",t.style.color=" hsl(234, 11%, 52%)",r.style.color=" hsl(234, 11%, 52%)",i.style.backgroundColor="hsl(235, 24%, 19%)"})),h().lightTheme.addEventListener("click",(function(){document.querySelector("#theme__light").classList.add("hide"),document.querySelector("#theme__dark").classList.remove("hide");var e=document.querySelector("body"),n=document.querySelector(".todo__list"),t=document.querySelector(".todo__info"),r=document.querySelector(".todo__info a"),o=document.querySelector(".todo__status"),i=document.querySelector("input");e.style.backgroundColor="",n.style.backgroundColor="",t.style.backgroundColor="",o.style.backgroundColor="",t.style.color="",r.style.color="",i.style.backgroundColor=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,